name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      bot_token:
        description: 'Telegram Bot Token'
        required: true
      admin_chat_id:
        description: 'Admin Chat ID'
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython kivy pyjnius telebot

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential gcc g++ zlib1g-dev libncurses5-dev \
          libncursesw5-dev libffi-dev libssl-dev openjdk-17-jdk unzip wget libsqlite3-dev

    - name: Install Android SDK & NDK
      run: |
        mkdir -p $HOME/.buildozer/android/platform
        cd $HOME/.buildozer/android/platform
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
        unzip -q sdk-tools.zip -d android-sdk
        mkdir -p android-sdk/cmdline-tools/latest
        mv android-sdk/cmdline-tools/* android-sdk/cmdline-tools/latest/
        yes | android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=android-sdk \
          "platforms;android-31" "platform-tools" "build-tools;33.0.2" "ndk;25.1.8937393"

    - name: Generate main.py from client.py
      run: |
        sed -e "s/YOUR_BOT_TOKEN/${{ github.event.inputs.bot_token }}/g" \
            -e "s/YOUR_ADMIN_CHAT_ID/${{ github.event.inputs.admin_chat_id }}/g" \
            client.py > main.py

    - name: Build APK
      run: |
        buildozer -v android debug

    - name: List APKs
      run: ls -lh bin/

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: mybot-apk
        path: bin/*.apk
